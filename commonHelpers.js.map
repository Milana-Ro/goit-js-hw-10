{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nconst dateInput = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button');\nconst values = [...document.querySelectorAll('.value')];\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose: onCloseFoo,\n};\nconst datePicker = flatpickr(dateInput, options);\nlet userSelectedDate;\n// console.log(userSelectedDate);\n\nfunction onCloseFoo(selectedDates) {\n  userSelectedDate = selectedDates[0];\n  //   console.log(selectedDates[0]);\n\n  if (Date.parse(userSelectedDate) < Date.now()) {\n    // console.log(' no no no');\n    showAlert();\n    startButton.disabled = true;\n  } else {\n    // console.log('yes yes');\n    startButton.disabled = false;\n  }\n}\n\nstartButton.addEventListener('click', onStartTimerClick);\n\nfunction onStartTimerClick() {\n  const timerID = setInterval(() => {\n    const diffTime = userSelectedDate - Date.now();\n    console.log(diffTime);\n    if (diffTime <= 0) {\n      //   console.log('off time');\n      clearInterval(timerID);\n      startButton.disabled = false;\n      dateInput.disabled = false;\n      return;\n    }\n    startButton.disabled = true;\n    dateInput.disabled = true;\n    convertMs(diffTime);\n    // console.log(convertMs(diffTime));\n    const [daysValue, hoursValue, minutesValue, secondsValue] = values;\n    console.log((secondsValue.textContent = '?????? хз що тут підставляти'));\n  }, 1000);\n}\n\nfunction addLeadingZero(value) {\n  value.padStart(2, '0');\n}\nfunction showAlert() {\n  iziToast.show({\n    message: 'Please choose a date in the future',\n    color: 'red',\n    position: 'topRight',\n  });\n}\n\n// task 1\n// виводити час в спани\n\n// task 2\n// зробити кнопку неактивною при першому завантаженні\n\n//task 3\n// refactoring\n"],"names":["dateInput","startButton","values","options","onCloseFoo","flatpickr","userSelectedDate","selectedDates","showAlert","onStartTimerClick","timerID","diffTime","daysValue","hoursValue","minutesValue","secondsValue","iziToast"],"mappings":"yIA6BA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAS,CAAC,GAAG,SAAS,iBAAiB,QAAQ,CAAC,EAEhDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAASC,CACX,EACmBC,EAAUL,EAAWG,CAAO,EAC/C,IAAIG,EAGJ,SAASF,EAAWG,EAAe,CACjCD,EAAmBC,EAAc,CAAC,EAG9B,KAAK,MAAMD,CAAgB,EAAI,KAAK,IAAG,GAEzCE,IACAP,EAAY,SAAW,IAGvBA,EAAY,SAAW,EAE3B,CAEAA,EAAY,iBAAiB,QAASQ,CAAiB,EAEvD,SAASA,GAAoB,CAC3B,MAAMC,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAWL,EAAmB,KAAK,IAAG,EAE5C,GADA,QAAQ,IAAIK,CAAQ,EAChBA,GAAY,EAAG,CAEjB,cAAcD,CAAO,EACrBT,EAAY,SAAW,GACvBD,EAAU,SAAW,GACrB,MACD,CACDC,EAAY,SAAW,GACvBD,EAAU,SAAW,GAGrB,KAAM,CAACY,EAAWC,EAAYC,EAAcC,CAAY,EAAIb,EAC5D,QAAQ,IAAKa,EAAa,YAAc,8BAA8B,CACvE,EAAE,GAAI,CACT,CAKA,SAASP,GAAY,CACnBQ,EAAS,KAAK,CACZ,QAAS,qCACT,MAAO,MACP,SAAU,UACd,CAAG,CACH"}